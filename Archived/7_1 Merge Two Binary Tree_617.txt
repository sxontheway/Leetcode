/********************C++**********************/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
        TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        	if(t1==NULL) return t2;
        	if(t2==NULL) return t1;
       	TreeNode* t = new TreeNode(t1->val + t2->val);
        	t->left =  mergeTrees(t1->left, t2->left);
        	t->right =  mergeTrees(t1->right, t2->right);
        	return t;
    }
};

/**********************C**********************/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
struct TreeNode* mergeTrees(struct TreeNode* t1, struct TreeNode* t2) {
	struct TreeNode* t = (struct TreeNode*) malloc(sizeof(struct TreeNode));
	if(t1 == NULL) return t2;
   	if(t2 == NULL) return t1;
   	t->val = t1->val + t2->val;
   	t->left = mergeTrees(t1->left, t2->left);
   	t->right = mergeTrees(t1->right, t2->right);
    	return t;
}